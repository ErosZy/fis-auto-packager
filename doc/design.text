% 静态资源自动打包方案
% fis-team

## 目标

* 高性能 : 从页面pv、资源的同步异步加载等不同角度给出静态资源合并的最优方案，保证页面加载资源的高性能
* 自动化 : 打包合并全过程自动化，无需人工参与，减少人工维护资源合并的成本。

## 静态资源自动打包使用

    自动打包方案会采用云服务的方式对外提供两种使用方案 ：

        1. http接口, 提供svn、pid、module等参数,返回生成的打包配置文件，该方法主要是为build.sh提供在提测时可以直接调用自动打包服务。
        2. web版， 输入svn、pid、module信息，会生成自动打包配置信息，该方案主要是为了需要手工修改自动打包方案的用户提供。


## 静态资源自动打包方案设计

    静态资源打包实现整体会分为一下几个阶段 ： fis支持、数据采集、分析脚本开发、资源打包算法开发、web页面及build.sh开发。

### fis支持

    1) fis编译支持

        单独生成json文件  hash ： id

        map.json ： 添加hash


### 数据采集、分析脚本开发

#### 流程



    1) 后端FISResource收集页面使用的js和css以及异步组件，并通过script代码输出到页面

        输出的时机 ：

            命中页面采样率之后才会收集，并输出信息， 否则不输出

        输出到页面的脚本内容分为两部分 ：

            第一部分 ：

                页面使用的js和css，异步组件，三个请求

            第二部分 ：

                发送请求的前端脚本， 具体参考下面

    2) 前端脚本将收集的js和css信息瓶装成http get请求发送到log平台

        发送请求的数量 :

            css 一个
            同步js一个
            异步js一个

                一共三个请求

        前端发送数据的方式 ：

            通过图片请求的方式发送 ： (new Image()).src = "url";

        前端发送的数据格式 ：

            请求格式 ：
                http://nsclick.baidu.com/u.gif?pid=242&v=1&data=&sid=123&hash=&fid=

            示例 ：

                http://nsclick.baidu.com/u.gif?pid=242&v=1&data=9e3ae04,de6ff03&sid=1383548904&type=js&hash=%3CSTATIC_HASH%3E&fid=%3C%3CPRODUCT_ID%3E%3E
                http://nsclick.baidu.com/u.gif?pid=242&v=1&data=9e3ae04,de6ff03&sid=1383549315&type=js&hash=786e9b6e3d&fid=%3C%3CPRODUCT_ID%3E%3E

            pid : fis在log平台的id
            sid ： 类似与sessionId的作用，目前是一额随机数，防止url请求被缓存
            data ： 经过压缩后的使用的资源数据
            v : 代表请求个数的版本号，防止以后请求升级，保持向下兼容使用
            hash : 页面使用资源的hash值，代表使用一组特定静态资源的url
            fid : 产品线在fis中的id，用来区分不同的产品线

    3) log平台每天定时执行数据分析，切割脚本，生成分析后的格式化数据日志

            Log平台添加每天定时统计任务，解析apache的access日志。分析前端收集到的信息，写入log文件中。

            Log日志格式 ：

                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=b458ed2,d049ab8,c686cc0,b75a9d7,76ef4ed,f2b7060&sid=1384318521&hash=7aae443f20&fid=async_demo HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"

            构造数据 ：

                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,a08c166,52b4336,1b103ec,a20b211,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb&page=place/page/list/list.tpl&sid=1386055995&hash=304d3eeaf1&fid=map_batman HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"
                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,a08c166,52b4336,1b103ec,a20b211,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb&page=place/page/list/list.tpl&sid=1386055995&hash=304d3eeaf1&fid=map_batman HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"
                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,a08c166,52b4336,1b103ec,a20b211,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb&page=place/page/list/list.tpl&sid=1386055995&hash=304d3eeaf1&fid=map_batman HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"
                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,a08c166,52b4336,1b103ec,a20b211,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb&page=place/page/list/list.tpl&sid=1386056173&hash=304d3eeaf1&fid=map_batman HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"

                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,04015fb,9819a26,2fff4ea,eee18da,31c6ade,490133a,b44360a,a2c64b2,4b46797,742cbd4,5de0fe4,cfb9f3e,225273c,949afe7,56d9bed,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb&page=place/page/detail/hotel.tpl&sid=1386056075&hash=9a669f93d6&fid=map_batman HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"
                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,04015fb,9819a26,2fff4ea,eee18da,31c6ade,490133a,b44360a,a2c64b2,4b46797,742cbd4,5de0fe4,cfb9f3e,225273c,949afe7,56d9bed,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb&page=place/page/detail/hotel.tpl&sid=1386056075&hash=9a669f93d6&fid=map_batman HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"

                127.0.0.1 - - [13/Nov/2013:12:55:21 +0800] "GET /u.gif?pid=242&v=1&data=524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,d462004,b892c44,58f4869,71d6ee4,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb&page=index/page/navline.tpl&sid=1386056119&hash=2beb5ea134&fid=map_batman HTTP/1.1" 200 2326 "http://127.0.0.1:8080/pagelet/page/index" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36"



            文件格式：

                fid  hash 使用资源 pv tpl url

            示例：

                map_batman 2beb5ea134 524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,d462004,b892c44,58f4869,71d6ee4,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb 1 index/page/navline.tpl http://127.0.0.1:8080/pagelet/page/index
                map_batman 304d3eeaf1 524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,a08c166,52b4336,1b103ec,a20b211,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb 4 place/page/list/list.tpl http://127.0.0.1:8080/pagelet/page/index
                map_batman 9a669f93d6 524d8e8,2a3f5c5,62b5d4b,42e410f,628ad75,77da00b,04015fb,9819a26,2fff4ea,eee18da,31c6ade,490133a,b44360a,a2c64b2,4b46797,742cbd4,5de0fe4,cfb9f3e,225273c,949afe7,56d9bed,859288f,7c0520c,c3028bf,68e599f,6ea6ef4,0e132eb 2 place/page/detail/hotel.tpl http://127.0.0.1:8080/pagelet/page/index





### 资源打包计算

#### 流程

    1) 通过http接口下载log平台生成的统计数据日志
    2) 按照固定的策略计算最佳打包方案

        打包方案会考虑的因素 ： 静态资源的使用次数、静态资源同步异步情况

    3) 根据最佳打包方案生成fis-config配置文件

### web页面及build.sh脚本开发


## 设计

### 数据采集阶段

    总体思路 ： 在页面渲染时收集所有的widget、require等静态资源加载入口，不处理他们的依赖关系。

#### quickling采集方案

quickling中分为三种形式 ：

* 传统渲染方案 ：
* 分页切换请求 ： 切页请求等同于传统网站的刷新，需要统计请求。
* widget延迟加载请求  ：页面渲染时已经收集了所有的widget所以对于延迟加载的widget请求不再需要统计。

#### 同步异步划分

父元素是同步使用 ：

    本身被同步使用 : 则是同步属性
    本身被异步使用 ： 则是异步属性

父元素是异步使用 ：

    无论本身被如何使用都是异步属性

最终如果有同步属性 ： 则是同步，否则是异步。

